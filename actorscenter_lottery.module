<?php

function _audition_display_bits(){
  drupal_add_css(drupal_get_path('module', 'actorscenter_lottery') . '/actorscenter_lottery.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
  drupal_add_js(drupal_get_path('module', 'actorscenter_lottery') . '/actorscenter_lottery.js', 'file');
}

module_load_include('signup.inc', 'actorscenter_lottery');
module_load_include('content_type.inc', 'actorscenter_lottery');

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function actorscenter_lottery_help($path, $arg) {
  _audition_display_bits();
  switch ($path) {
    case "admin/help#actorscenter_lottery":
      return '<p>' . t("Content types and other code for AC's Lottery auditions") . '</p>';
      break;
  }
}

/**
 * Implements hook_menu().
 */
function actorscenter_lottery_admin() {
  _audition_display_bits();
  $form = array();

  $form['lottery_auditions_signup_open_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Open signup instructions'),
    '#default_value' => variable_get('lottery_auditions_signup_open_message'),
    '#cols' => 50,
    '#rows' => 3,
    '#maxlength' => 300,
    '#description' => t("The message to show on a lottery audition signup form when the lottery is open and the user has not yet signed up."),
    '#required' => TRUE,
  );
  $form['lottery_auditions_signup_signedup_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Instructions to update an existing lottery signup'),
    '#default_value' => variable_get('lottery_auditions_signup_signedup_message'),
    '#cols' => 50,
    '#rows' => 3,
    '#maxlength' => 300,
    '#description' => t("The message to show on a lottery audition signup form when the lottery is open and the user HAS signed up."),
    '#required' => TRUE,
  );
  $form['lottery_auditions_signup_closed_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Closed signup message'),
    '#default_value' => variable_get('lottery_auditions_signup_closed_message'),
    '#cols' => 50,
    '#rows' => 3,
    '#maxlength' => 300,
    '#description' => t("The message to show on a lottery audition signup form when the lottery is closed, the user has signed up, and the lottery has not yet been drawn."),
    '#required' => TRUE,
  );

  $form['lottery_auditions_signup_closed_nosignup_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Closed signup message for users who have not signed up'),
    '#default_value' => variable_get('lottery_auditions_signup_closed_nosignup_message'),
    '#cols' => 50,
    '#rows' => 3,
    '#maxlength' => 300,
    '#description' => t("The message to show on a lottery audition signup form when the lottery is closed and the user has NOT signed up."),
    '#required' => TRUE,
  );

  // XXX these need validation
  $form['lottery_auditions_signup_open_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Banner background color for open lotteries.'),
    '#default_value' => variable_get('lottery_auditions_signup_open_color'),
    '#size' => 15,
    '#maxlength' => 20,
    '#description' => t("The background color for the corner banner on a lottery audition signup form when the lottery is open and the user has not yet signed up."),
    '#required' => TRUE,
  );
  $form['lottery_auditions_signup_signedup_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Banner background color for lotteries the user has entered.'),
    '#default_value' => variable_get('lottery_auditions_signup_signedup_color'),
    '#size' => 15,
    '#maxlength' => 20,
    '#description' => t("The background color for the corner banner on a lottery audition signup form when the user HAS signed up."),
    '#required' => TRUE,
  );
  $form['lottery_auditions_signup_closed_nosignup_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Banner background color for closed lotteries.'),
    '#default_value' => variable_get('lottery_auditions_signup_closed_nosignup_color'),
    '#size' => 15,
    '#maxlength' => 20,
    '#description' => t("The background color for the corner banner on a lottery audition signup form when the lottery is closed and the user has NOT signed up."),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_menu().
 */
function actorscenter_lottery_menu() {
  _audition_display_bits();
  $items = array();

  $items['admin/config/people/lottery_auditions'] = array(
    'title' => 'Lottery Auditions',
    'description' => 'Configuration settings for the Lottery Auditions module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('actorscenter_lottery_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['lottery_signup'] = array(
    'title' => 'Lottery Audition Signups',
    'description' => 'Sign up for pending lottery auditions.',
    'page callback' => 'lottery_audition_signup_page',
    'access callback' => 'user_is_logged_in', // XXX should have a callback that checks against a configured list of roles to do the thing... actually, define a permission and have site maintainers grant it to appropriate roles
  );

  return $items;
}

/*
function actorscenter_lottery_block_info() {
  $blocks['lottery_audition_signup'] = array(
    'info' => t('Lottery Audition Signups'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );
  return $blocks;
}
*/


/**
 * Implements hook_theme_registry_alter().
 */

function actorscenter_lottery_theme_registry_alter(&$theme_registry) {
  _audition_display_bits();
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'actorscenter_lottery')."/templates";
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}

/**
 * Manipulate our plain old lottery object into a signup form for itself. This
 * is what should always be displayed to end users, whatever the context (page,
 * views, etc), so give the templatessomething they can render.
 */
function actorscenter_lottery_preprocess_node(&$variables){
  if($variables['type'] == "lottery_audition"){
    $variables['audition_signup_form'] = lottery_audition_signup_page($variables['nid'], $variables['elements']);
  }
}
